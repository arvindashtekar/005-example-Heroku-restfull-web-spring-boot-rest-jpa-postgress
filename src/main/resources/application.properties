########################################################################
# [ Spring Configuration Section ]

spring.profiles.active=local
#other profiles  dev,test,integration,production etc
########################################################################
# [ Database Configuration Section ]

spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect
#spring.jpa.generate-ddl=true
spring.jpa.show-sql=true
#spring.jpa.hibernate.ddl-auto=create
#spring.jpa.hibernate.ddl-auto=create-drop
spring.datasource.driverClassName=org.postgresql.Driver
#spring.datasource.url=jdbc:postgresql://localhost:5432/test
spring.datasource.url=jdbc:postgresql://ec2-107-20-166-28.compute-1.amazonaws.com:5432/d53d1tr5jfo6ml
spring.datasource.username=dbpwjgxpyalozf
spring.datasource.password=tETijsIe4GwEy3fuiUSyZMHs2S

########################################################################
# [ Logging Configuration Section ]

#The  SLF4J serves as a simple facade or abstraction for various logging frameworks, such as java.util.logging, logback and log4j. SLF4J allows the end-user to plug in the desired logging framework at deployment time.
logging.level.org.springframework.web=INFO
logging.level.com.mycompany.application=DEBUG
logging.level.org.hibernate=ERROR
logging.file=logs/spring-boot-logging.log
########################################################################

spring.devtools.restart.exclude=static/**,public/**
spring.devtools.restart.enabled=false
#spring.devtools.livereload.enabled

########################################################################
# [ test Configuration Section ]
#Chose randon port during server boot
#server.port=0
